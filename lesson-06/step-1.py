# Ввод и вывод

"""
0 - stdin - стандартный поток ввода
    input() (str)
    sys.stdin (bytes)
1 - stdout - стандартный поток вывода
    print() (any)
    sys.stdout (bytes)
2 - stderr - стандартный поток ошибок
    Исключения (raise)
    sys.stderr
"""


# Файловый ввод и вывод

"""
open(path[, mode]) - Низкоуровневая функция ОС

Как открыть файл в режиме записи?
w - перезапись
    файл не существует -> создается
    файл существует -> перезаписывается
a - дозапись в конец файла
    файл не существует -> создается
    файл существует -> запись в конец файла
x - эксклюзивное создание файла
    файл не существует -> создается
    файл существует -> исключение (ошибка)  


Как открыть файл в режиме чтения?
r - файл не существует или нет прав -> исключение (ошибка)
w+, a+, x+ - режимы записи с возможностью чтения

...

Файлы бывают текстовые и бинарные

t - текстовый режим (по-умолчанию) юникодные строчки (str)
b - бинарный режим (bytes)
U - универсальный режим переноса строк (устарело и deprecated)
"""

# Как открыть файл в режиме записи?

with open('out.txt', 'w') as f:
    f.write('123\t456\n')
    f.write('7\t8\n')
    f.write('''
        a
        b
        c''')
    f.writelines(['A\n', 'D']) # просто записать что-то итерируемое одной командой. реально не отдельные строки
    f.write(str(666+1)) #Обязательно привести к строке, число записать нельзя

# Как открыть файл в режиме чтения?
#with open('out.txt', 'r') as f:
with open('out.txt') as f: #по-умолчанию чтение текстового файла
    # s = f.read()
    print('Прочитать файл в строку:\n{}'.format(
        f.read()
    ))

    f.seek(0) #принимает смещение в байтах от начала файла

    print('Прочитать файл в список:\n{}'.format(
        f.readlines()
    ))

    f.seek(0)

    print('Прочитать файл построчно:\n{}'.format(
        f.readline()
    ))

    for line in f: #Перебирает построчно
        print(line)
    
    # далее использовать в двоичном режиме

    f.seek(0)

    print('Прочитать из файла N байт:\n{}'.format(
        f.read(4) #количество байт относительно позиции курсора
    ))
    print(f.read(6))

    print('Позиция курсора: {}'.format(f.tell()))



